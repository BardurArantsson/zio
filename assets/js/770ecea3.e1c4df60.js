"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[3390],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=i,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1418:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={id:"clock",title:"Clock"},l=void 0,s={unversionedId:"services/clock",id:"version-1.x/services/clock",isDocsHomePage:!1,title:"Clock",description:"Clock service contains some functionality related to time and scheduling.",source:"@site/versioned_docs/version-1.x/services/clock.md",sourceDirName:"services",slug:"/services/clock",permalink:"/version-1.x/services/clock",editUrl:"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.x/services/clock.md",tags:[],version:"1.x",frontMatter:{id:"clock",title:"Clock"},sidebar:"services-sidebar",previous:{title:"Console",permalink:"/version-1.x/services/console"},next:{title:"Random",permalink:"/version-1.x/services/random"}},p=[],u={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Clock service contains some functionality related to time and scheduling. "),(0,o.kt)("p",null,"To get the current time in a specific time unit, the ",(0,o.kt)("inlineCode",{parentName:"p"},"currentTime")," function takes a unit as ",(0,o.kt)("inlineCode",{parentName:"p"},"TimeUnit")," and returns ",(0,o.kt)("inlineCode",{parentName:"p"},"UIO[Long]"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"val inMiliseconds: URIO[Clock, Long] = currentTime(TimeUnit.MILLISECONDS)\nval inDays: URIO[Clock, Long] = currentTime(TimeUnit.DAYS)\n")),(0,o.kt)("p",null,"To get current data time in the current timezone the ",(0,o.kt)("inlineCode",{parentName:"p"},"currentDateTime")," function returns a ZIO effect containing ",(0,o.kt)("inlineCode",{parentName:"p"},"OffsetDateTime"),"."),(0,o.kt)("p",null,"Also, the Clock service has a very useful functionality for sleeping and creating a delay between jobs. The ",(0,o.kt)("inlineCode",{parentName:"p"},"sleep")," takes a ",(0,o.kt)("inlineCode",{parentName:"p"},"Duration")," and sleep for the specified duration. It is analogous to ",(0,o.kt)("inlineCode",{parentName:"p"},"java.lang.Thread.sleep")," function, but it doesn't block any underlying thread. It's completely non-blocking."),(0,o.kt)("p",null,"In following example we are going to print the current time periodically by placing a one second",(0,o.kt)("inlineCode",{parentName:"p"},"sleep")," between each print call:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"def printTimeForever: ZIO[Console with Clock, Throwable, Nothing] =\n  currentDateTime.flatMap(time => putStrLn(time.toString)) *>\n    sleep(1.seconds) *> printTimeForever\n")),(0,o.kt)("p",null,"For scheduling purposes like retry and repeats, ZIO has a great data type called ",(0,o.kt)("a",{parentName:"p",href:"/version-1.x/datatypes/misc/schedule"},"Schedule"),"."))}m.isMDXComponent=!0}}]);