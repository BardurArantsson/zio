"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[75047],{67373:e=>{e.exports=JSON.parse('{"pluginId":"zio-actors","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"ZIO Actors","href":"/zio-actors/","docId":"index"},{"type":"link","label":"Basics","href":"/zio-actors/basics","docId":"basics"},{"type":"link","label":"Supervision","href":"/zio-actors/supervision","docId":"supervision"},{"type":"link","label":"Remoting","href":"/zio-actors/remoting","docId":"remoting"},{"type":"link","label":"Persistence","href":"/zio-actors/persistence","docId":"persistence"},{"type":"link","label":"Akka Interop","href":"/zio-actors/akka-interop","docId":"akka-interop"},{"type":"link","label":"Examples","href":"/zio-actors/examples","docId":"examples"}]},"docs":{"akka-interop":{"id":"akka-interop","title":"Akka Interop","description":"Akka Interop gives you the ability to send and receive messages between zio actors and akka typed actors.","sidebar":"sidebar"},"basics":{"id":"basics","title":"Basics","description":"Actors are higher level concurrency models which receive messages, process them and update their internal state.","sidebar":"sidebar"},"examples":{"id":"examples","title":"Examples","description":"So now how to use it? Here you can find some examples to dive into:","sidebar":"sidebar"},"index":{"id":"index","title":"Introduction to ZIO Actors","description":"ZIO Actors - a high-performance, purely-functional library for building, composing, and supervising typed actors backed by ZIO.","sidebar":"sidebar"},"persistence":{"id":"persistence","title":"Persistence","description":"Persistence gives you ability to store events that occur in your system with defined datastore.","sidebar":"sidebar"},"remoting":{"id":"remoting","title":"Remoting","description":"Remoting makes it possible to lookup for actors that reside on another ActorSystems.","sidebar":"sidebar"},"supervision":{"id":"supervision","title":"Supervision","description":"A Supervisors responsibility is to manage actors failure policies.","sidebar":"sidebar"}}}')}}]);