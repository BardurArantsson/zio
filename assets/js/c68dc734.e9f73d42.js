"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[5537],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={id:"basics",title:"Basics"},o=void 0,s={unversionedId:"basics",id:"basics",title:"Basics",description:"Actors are higher level concurrency models which receive messages, process them and update their internal state.",source:"@site/node_modules/@zio.dev/zio-actors/basics.md",sourceDirName:".",slug:"/basics",permalink:"/zio-actors/basics",draft:!1,tags:[],version:"current",frontMatter:{id:"basics",title:"Basics"},sidebar:"sidebar",previous:{title:"ZIO Actors",permalink:"/zio-actors/"},next:{title:"Supervision",permalink:"/zio-actors/supervision"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:3}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Actors are higher level concurrency models which receive messages, process them and update their internal state.\nWithin processing actor can spawn finite number of children actors and send finite number of messages to other actors.  "),(0,a.kt)("p",null,"This can be visualized as a simple diagram:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"diagram",src:n(70973).Z,width:"730",height:"322"})),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The basic actors usage requires defining a ",(0,a.kt)("inlineCode",{parentName:"p"},"Stateful")," for describing actor's behavior.\nThen actor's creation is done with passing supervision manner, initial state and mentioned ",(0,a.kt)("inlineCode",{parentName:"p"},"Stateful"),"."),(0,a.kt)("p",null,"Imports required for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import java.io.File\n\nimport zio.actors.Actor.Stateful\nimport zio.actors._\nimport zio.{UIO, ZIO}\n")),(0,a.kt)("p",null,"Our domain that will be used:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"sealed trait Command[+_]\ncase class DoubleCommand(value: Int) extends Command[Int]\n")),(0,a.kt)("p",null,"Our actor's assigment will be to double received values. Here's the ",(0,a.kt)("inlineCode",{parentName:"p"},"Stateful")," implementation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val stateful = new Stateful[Any, Unit, Command] {\n  override def receive[A](state: Unit, msg: Command[A], context: Context): UIO[(Unit, A)] =\n    msg match {\n      case DoubleCommand(value) => ZIO.succeed(((), value * 2))\n    }\n}\n")),(0,a.kt)("p",null,"Then we are ready to instantiate the actor and fire off messages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'for {\n  system  <- ActorSystem("mySystem")\n  actor   <- system.make("actor1", Supervisor.none, (), stateful)\n  doubled <- actor ! DoubleCommand(42)\n} yield doubled\n')),(0,a.kt)("p",null,"This is ",(0,a.kt)("inlineCode",{parentName:"p"},"fire-and-forget")," interaction pattern where caller is blocked until recipients confirms enqueueing message in mailbox queue.\nThere's also ",(0,a.kt)("inlineCode",{parentName:"p"},"ask")," interaction pattern where for caller sending a message is completed after receiving response message from recipient.\nIt's performed via ",(0,a.kt)("inlineCode",{parentName:"p"},"?")," method."),(0,a.kt)("p",null,"From recipient's point of view these two interaction patterns are indistinguishable. "),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"For each ",(0,a.kt)("inlineCode",{parentName:"p"},"ActorSystem")," created there should be a config entry in configuration file.\nBy default configuration file is expected to be at ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/main/resources/application.conf"),".\nExemplary configuration entry for an ",(0,a.kt)("inlineCode",{parentName:"p"},"ActorSystem")," named ",(0,a.kt)("inlineCode",{parentName:"p"},"Test1"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hocon"},'Test1.zio.actors.remoting {\n  hostname = "127.0.0.1"\n  port = 1234\n}\n')),(0,a.kt)("p",null,"Custom configuration file can be provided when instantiating ",(0,a.kt)("inlineCode",{parentName:"p"},"ActorSystem"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'ActorSystem("mySystem", Some(new File("./my/custom/path/app.conf")))\n')))}u.isMDXComponent=!0},70973:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/actor-52da23d423d7d0455323e46319402f08.svg"}}]);