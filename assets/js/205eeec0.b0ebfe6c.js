"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[8919],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=i.createContext({}),c=function(e){var t=i.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return i.createElement(a.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,f=p["".concat(a,".").concat(m)]||p[m]||d[m]||o;return r?i.createElement(f,s(s({ref:t},u),{},{components:r})):i.createElement(f,s({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=p;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6095:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var i=r(7462),n=r(3366),o=(r(7294),r(3905)),s=["components"],l={id:"zio-redis",title:"ZIO Redis"},a=void 0,c={unversionedId:"resources/ecosystem/officials/zio-redis",id:"resources/ecosystem/officials/zio-redis",isDocsHomePage:!1,title:"ZIO Redis",description:"ZIO Redis is a ZIO native Redis client.",source:"@site/docs/resources/ecosystem/officials/zio-redis.md",sourceDirName:"resources/ecosystem/officials",slug:"/resources/ecosystem/officials/zio-redis",permalink:"/next/resources/ecosystem/officials/zio-redis",editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/resources/ecosystem/officials/zio-redis.md",tags:[],version:"current",frontMatter:{id:"zio-redis",title:"ZIO Redis"},sidebar:"resources-sidebar",previous:{title:"ZIO Query",permalink:"/next/resources/ecosystem/officials/zio-query"},next:{title:"ZIO RocksDB",permalink:"/next/resources/ecosystem/officials/zio-rocksdb"}},u=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Installation",id:"installation",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Resources",id:"resources",children:[],level:2}],d={toc:u};function p(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-redis"},"ZIO Redis")," is a ZIO native Redis client."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"ZIO Redis is in the experimental phase of development, but its goals are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type Safety")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Performance")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Minimum Dependency")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ZIO Native"))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Since the ZIO Redis is in the experimental phase, it is not released yet."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"To execute our ZIO Redis effect, we should provide the ",(0,o.kt)("inlineCode",{parentName:"p"},"RedisExecutor")," service builder to that effect. To create this service builder we should also provide the following service builders:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Logging")," \u2014 For simplicity, we ignored the logging functionality."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"RedisConfig")," \u2014 Using default one, will connect to the ",(0,o.kt)("inlineCode",{parentName:"li"},"localhost:6379")," Redis instance."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Codec")," \u2014 In this example, we are going to use the built-in ",(0,o.kt)("inlineCode",{parentName:"li"},"StringUtf8Codec")," codec.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.console.{Console, putStrLn}\nimport zio.duration._\nimport zio.logging.Logging\nimport zio.redis._\nimport zio.redis.codec.StringUtf8Codec\nimport zio.schema.codec.Codec\nimport zio.{ExitCode, URIO, ZIO, ZServiceBuilder}\n\nobject ZIORedisExample extends zio.App {\n\n  val myApp: ZIO[Console with RedisExecutor, RedisError, Unit] = for {\n    _ <- set("myKey", 8L, Some(1.minutes))\n    v <- get[String, Long]("myKey")\n    _ <- putStrLn(s"Value of myKey: $v").orDie\n    _ <- hSet("myHash", ("k1", 6), ("k2", 2))\n    _ <- rPush("myList", 1, 2, 3, 4)\n    _ <- sAdd("mySet", "a", "b", "a", "c")\n  } yield ()\n\n  val serviceBuilder: ZServiceBuilder[Any, RedisError.IOError, RedisExecutor] =\n    Logging.ignore ++ ZServiceBuilder.succeed(RedisConfig.Default) ++ ZServiceBuilder.succeed(StringUtf8Codec) >>> RedisExecutor.live\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    myApp.provideCustomServices(serviceBuilder).exitCode\n}\n')),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=yqFt3b3RBkI"},"ZIO Redis")," by Dejan Mijic \u2014 Redis is one of the most commonly used in-memory data structure stores. In this talk, Dejan will introduce ZIO Redis, a purely functional, strongly typed client library backed by ZIO, with excellent performance and extensive support for nearly all of Redis' features. He will explain the library design using the bottom-up approach - from communication protocol to public APIs. Finally, he will wrap the talk by demonstrating the client's usage and discussing its performance characteristics.")))}p.isMDXComponent=!0}}]);