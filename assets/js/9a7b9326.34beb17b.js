"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[61866],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),g=r,f=u["".concat(l,".").concat(g)]||u[g]||m[g]||a;return t?o.createElement(f,i(i({ref:n},p),{},{components:t})):o.createElement(f,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},44694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={id:"examples",title:"Examples"},i=void 0,s={unversionedId:"examples",id:"examples",title:"Examples",description:"So now how to use it? Here you can find some examples to dive into:",source:"@site/node_modules/@zio.dev/zio-actors/examples.md",sourceDirName:".",slug:"/examples",permalink:"/zio-actors/examples",draft:!1,tags:[],version:"current",frontMatter:{id:"examples",title:"Examples"},sidebar:"sidebar",previous:{title:"Akka Interop",permalink:"/zio-actors/akka-interop"}},l={},c=[{value:"Ping Pong Example",id:"ping-pong-example",level:2},{value:"Configuration File at <code>./src/main/resources/application.conf</code>",id:"configuration-file-at-srcmainresourcesapplicationconf",level:4},{value:"Program",id:"program",level:4}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"So now how to use it? Here you can find some examples to dive into:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#ping-pong-example"},"Ping Pong"))," \u2014 Example of ",(0,r.kt)("inlineCode",{parentName:"li"},"fire-and-forget")," ping-pong with remote actor lookup"),(0,r.kt)("li",{parentName:"ul"},"Also there are project samples in ",(0,r.kt)("inlineCode",{parentName:"li"},"examples")," root directory of the repo.\nThey are meant to be a counterpart of ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/akka/akka-samples"},"akka-samples")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"zio-actors"),".")),(0,r.kt)("h2",{id:"ping-pong-example"},"Ping Pong Example"),(0,r.kt)("p",null,"Here are type hierarchy and ",(0,r.kt)("inlineCode",{parentName:"p"},"Stateful")," instance which can be used to create two actors performing basic ping-pong communication."),(0,r.kt)("h4",{id:"configuration-file-at-srcmainresourcesapplicationconf"},"Configuration File at ",(0,r.kt)("inlineCode",{parentName:"h4"},"./src/main/resources/application.conf")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hocon"},'testSystemOne.zio.actors.remoting {\n  hostname = "127.0.0.1"\n  port = 8055\n}\ntestSystemTwo.zio.actors.remoting {\n  hostname = "127.0.0.1"\n  port = 8056\n}\n')),(0,r.kt)("h4",{id:"program"},"Program"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.actors.Actor.Stateful\nimport zio.actors._\nimport zio.RIO\nimport zio._\n\nsealed trait PingPong[+_]\ncase class Ping(sender: ActorRef[PingPong])        extends PingPong[Unit]\ncase object Pong                                   extends PingPong[Unit]\ncase class GameInit(recipient: ActorRef[PingPong]) extends PingPong[Unit]\n\nval protoHandler = new Stateful[Console, Unit, PingPong] {\n    override def receive[A](\n      state: Unit,\n      msg: PingPong[A],\n      context: Context\n    ): RIO[Console, (Unit, A)] =\n      msg match {\n        case Ping(sender) =>\n          for {\n            _    <- Console.printLine("Ping!")\n            path <- sender.path\n            _    <- sender ! Pong\n          } yield ((), ())\n\n        case Pong =>\n          for {\n            _ <- Console.printLine("Pong!")\n          } yield ((), ())\n\n        case GameInit(to) =>\n          for {\n            self <- context.self[PingPong]\n            _    <- to ! Ping(self)\n          } yield ((), ())\n      }\n  }\n\nval program = for {\n  actorSystemRoot <- ActorSystem("testSystemOne")\n  one             <- actorSystemRoot.make("actorOne", zio.actors.Supervisor.none, (), protoHandler)\n\n  actorSystem <- ActorSystem("testSystemTwo")\n  _           <- actorSystem.make("actorTwo", zio.actors.Supervisor.none, (), protoHandler)\n\n  remoteActor <- actorSystemRoot.select[PingPong](\n    "zio://testSystemTwo@127.0.0.1:8056/actorTwo"\n  )\n\n  _ <- one ! GameInit(remoteActor)\n\n} yield ()\n')))}m.isMDXComponent=!0}}]);