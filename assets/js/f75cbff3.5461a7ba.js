"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[1379],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?a.createElement(f,l(l({ref:t},p),{},{components:r})):a.createElement(f,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5790:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={id:"metriclabel",title:"MetricLabel"},l=void 0,o={unversionedId:"datatypes/metrics/metriclabel",id:"datatypes/metrics/metriclabel",title:"MetricLabel",description:"A MetricLabel metadata represents a key-value pair that allows analyzing metrics at an additional level of granularity. For example, if a metric tracks the response time of a service, labels could be used to create separate versions that track response times for different clients.",source:"@site/docs/datatypes/metrics/metriclabel.md",sourceDirName:"datatypes/metrics",slug:"/datatypes/metrics/metriclabel",permalink:"/next/datatypes/metrics/metriclabel",editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/datatypes/metrics/metriclabel.md",tags:[],version:"current",frontMatter:{id:"metriclabel",title:"MetricLabel"},sidebar:"datatypes-sidebar",previous:{title:"Frequency",permalink:"/next/datatypes/metrics/setcount"},next:{title:"JVM Metrics",permalink:"/next/datatypes/metrics/jvm"}},s=[],c={toc:s};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A ",(0,n.kt)("inlineCode",{parentName:"p"},"MetricLabel")," metadata represents a key-value pair that allows analyzing metrics at an additional level of granularity. For example, if a metric tracks the response time of a service, labels could be used to create separate versions that track response times for different clients. "),(0,n.kt)("p",null,"ZIO Metrics has a ",(0,n.kt)("em",{parentName:"p"},"label based dimensional")," data model where we have a metric name and just a list of key-value pairs attached to that metric name. So labels are the first-class citizen in ZIO Metrics. In monitoring dashboards, we can find or filter metrics using these labels."),(0,n.kt)("p",null,"For example, we can append following labels (dimensions) to our metric aspects:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Endpoint (/api/users, /api/documents)"),(0,n.kt)("li",{parentName:"ul"},"HTTP Method (POST, GET)"),(0,n.kt)("li",{parentName:"ul"},"Deployment Environment (Staging, Production)"),(0,n.kt)("li",{parentName:"ul"},"HTTP Response Code"),(0,n.kt)("li",{parentName:"ul"},"Error code (404, 503)"),(0,n.kt)("li",{parentName:"ul"},"Datacenter Zone (us-east, eu-west)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\nval counter = Metric.counter("http_requests")\n  .tagged(\n    MetricLabel("env", "production")\n    MetricLabel("method", "GET"),\n    MetricLabel("endpoint", "/api/users"),\n    MetricLabel("zone", "ap-northeast"),\n  )\n')),(0,n.kt)("p",null,"By labeling metrics, we can query in a more granular way in monitoring dashboards, such as"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"How many requests have been sent to each endpoint in total?"),(0,n.kt)("li",{parentName:"ul"},"In which zone are we about to violate SLAs?"),(0,n.kt)("li",{parentName:"ul"},"Which endpoint has the most latency?")))}p.isMDXComponent=!0}}]);