"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[8432],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},78736:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={id:"index",title:"Introduction to ZIO Schema",sidebar_label:"Introduction"},o=void 0,l={unversionedId:"index",id:"index",title:"Introduction to ZIO Schema",description:"Installation",source:"@site/node_modules/@zio.dev/zio-schema/index.md",sourceDirName:".",slug:"/",permalink:"/zio-schema/",draft:!1,tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZIO Schema",sidebar_label:"Introduction"},sidebar:"sidebar",next:{title:"Our First Schema",permalink:"/zio-schema/our-first-schema"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Purpose of ZIO Schema",id:"purpose-of-zio-schema",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Add in your ",(0,a.kt)("inlineCode",{parentName:"p"},"build.sbt"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "dev.zio" %% "zio-schema" % "0.2.1"\nlibraryDependencies += "dev.zio" %% "zio-schema-json" % "0.2.1"\nlibraryDependencies += "dev.zio" %% "zio-schema-protobuf" % "0.2.1"\n')),(0,a.kt)("h2",{id:"purpose-of-zio-schema"},"Purpose of ZIO Schema"),(0,a.kt)("p",null,"ZIO Schema allows you to create representations of your data types as values."),(0,a.kt)("p",null,"Once you have a representation of your data types, you can use it to"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"serialize and deserialize your types"),(0,a.kt)("li",{parentName:"ul"},"validate your types"),(0,a.kt)("li",{parentName:"ul"},"transform your types"),(0,a.kt)("li",{parentName:"ul"},"create instances of your types")),(0,a.kt)("p",null,"You can then use one of the various codecs (or create your own) to serialize and deserialize your types."),(0,a.kt)("p",null,"Example of possible codecs are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CSV Codec"),(0,a.kt)("li",{parentName:"ul"},"JSON Codec (already available)"),(0,a.kt)("li",{parentName:"ul"},"Apache Avro Codec (in progress)"),(0,a.kt)("li",{parentName:"ul"},"Apache Thrift Codec (in progress)"),(0,a.kt)("li",{parentName:"ul"},"XML Codec"),(0,a.kt)("li",{parentName:"ul"},"YAML Codec"),(0,a.kt)("li",{parentName:"ul"},"Protobuf Codec (already available)"),(0,a.kt)("li",{parentName:"ul"},"QueryString Codec"),(0,a.kt)("li",{parentName:"ul"},"etc.")),(0,a.kt)("p",null,"Example use cases that are possible:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Serializing and deserializing JSON"),(0,a.kt)("li",{parentName:"ul"},"Serializing and deserializing XML"),(0,a.kt)("li",{parentName:"ul"},"Validating JSON"),(0,a.kt)("li",{parentName:"ul"},"Validating XML"),(0,a.kt)("li",{parentName:"ul"},"Transforming JSON"),(0,a.kt)("li",{parentName:"ul"},"Transforming XML"),(0,a.kt)("li",{parentName:"ul"},"Transforming JSON to XML"),(0,a.kt)("li",{parentName:"ul"},"Transforming XML to JSON"),(0,a.kt)("li",{parentName:"ul"},"Creating diffs from arbitrary data structures"),(0,a.kt)("li",{parentName:"ul"},"Creating migrations / evolutions e.g. of Events used in Event-Sourcing"),(0,a.kt)("li",{parentName:"ul"},"Transformation pipelines, e.g.",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"convert from protobuf to object, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"PersonDTO"),","),(0,a.kt)("li",{parentName:"ol"},"transform to another representation, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"Person"),","),(0,a.kt)("li",{parentName:"ol"},"validate"),(0,a.kt)("li",{parentName:"ol"},"transform to JSON ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonObject")),(0,a.kt)("li",{parentName:"ol"},"serialize to ",(0,a.kt)("inlineCode",{parentName:"li"},"String"))))))}c.isMDXComponent=!0}}]);