"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[4061],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(f,i(i({ref:t},u),{},{components:a})):n.createElement(f,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7309:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={id:"cassandra-key-value-store",title:"Cassandra Key-value Store"},i="Example Project",s={unversionedId:"cassandra-key-value-store",id:"cassandra-key-value-store",title:"Cassandra Key-value Store",description:"An example project or sample code will be provided in the future to demonstrate how to use this module in a zio-flow app. In the meantime, our integration test suite (under it subdirectory) provides some good examples. Mainly, a CqlSession needs to be provided. See CassandraTestContainerSupport.scala in the test suite on how to construct a CqlSession.",source:"@site/node_modules/@zio.dev/zio-flow/CassandraKvStore.md",sourceDirName:".",slug:"/cassandra-key-value-store",permalink:"/zio-flow/cassandra-key-value-store",draft:!1,tags:[],version:"current",frontMatter:{id:"cassandra-key-value-store",title:"Cassandra Key-value Store"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/zio-flow/"},next:{title:"DynamoDB Key-value Store",permalink:"/zio-flow/dynamodb-key-value-store"}},l={},p=[],u={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"example-project"},"Example Project"),(0,r.kt)("p",null,"An example project or sample code will be provided in the future to demonstrate how to use this module in a ",(0,r.kt)("inlineCode",{parentName:"p"},"zio-flow")," app. In the meantime, our integration test suite (under ",(0,r.kt)("inlineCode",{parentName:"p"},"it")," subdirectory) provides some good examples. Mainly, a ",(0,r.kt)("inlineCode",{parentName:"p"},"CqlSession")," needs to be provided. See ",(0,r.kt)("inlineCode",{parentName:"p"},"CassandraTestContainerSupport.scala")," in the test suite on how to construct a ",(0,r.kt)("inlineCode",{parentName:"p"},"CqlSession"),". "),(0,r.kt)("h1",{id:"supported-versions"},"Supported Versions"),(0,r.kt)("p",null,"The Cassandra module supports Cassandra 3.x, Cassandra 4.x and ScyllaDB 4.x. Specifically, we test against Cassandra 3.11, Cassandra 4.1, and ScyllaDB 4.5. See ",(0,r.kt)("inlineCode",{parentName:"p"},"CassandraKeyValueStoreSpec.scala")," in the test suite for more details. "),(0,r.kt)("h1",{id:"database-setup"},"Database Setup"),(0,r.kt)("p",null,"The Cassandra module requires a table (column family) for persistence. To create this table, run the following CQL statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cql"},"CREATE TABLE _zflow_key_value_store (\n  zflow_kv_namespace  VARCHAR,\n  zflow_kv_key        BLOB,\n  zflow_kv_timestamp  BIGINT,\n  zflow_kv_value      BLOB,\n  PRIMARY KEY (zflow_kv_namespace, zflow_kv_key, zflow_kv_timestamp)\n);\n")),(0,r.kt)("p",null,"You should add table options to this statement in a production environment for tuning. Please consult the official documentations of the database product of your choosing. "),(0,r.kt)("h1",{id:"performancescaling-considerations"},"Performance/Scaling Considerations:"),(0,r.kt)("p",null,"As you can see from the CQL above, the primary key is composed of the three columns, ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_timestamp"),". In particular, ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace")," is the partition key and ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_timestamp")," are the clustering keys. Assuming the default partitioner (Murmur3Partitioner) is used, data will be partitioned by the hash values of the ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace")," column. If one small set of namespace values are the majority for all possible values, that will create data skew and can have a big impact to your cluster down the road. Some consideration is needed when deciding the type of values ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace")," should store."))}c.isMDXComponent=!0}}]);