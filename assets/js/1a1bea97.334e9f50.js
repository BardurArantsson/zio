"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[2949],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,y=m["".concat(l,".").concat(f)]||m[f]||p[f]||s;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9829:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const s={id:"usecases_index",title:"Summary"},i=void 0,o={unversionedId:"usecases/usecases_index",id:"usecases/usecases_index",title:"Summary",description:"The ZIO library lets you easily solve problems in a variety of areas, including:",source:"@site/docs/usecases/index.md",sourceDirName:"usecases",slug:"/usecases/",permalink:"/next/usecases/",editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/usecases/index.md",tags:[],version:"current",frontMatter:{id:"usecases_index",title:"Summary"},sidebar:"usecases-sidebar",next:{title:"Asynchronous",permalink:"/next/usecases/usecases_asynchronous"}},l=[],c={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ZIO library lets you easily solve problems in a variety of areas, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_asynchronous"},(0,a.kt)("strong",{parentName:"a"},"Asynchronous Programming"))," \u2014 Write asynchronous code as easily as synchronous code, handling all errors and never leaking resources."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_concurrency"},(0,a.kt)("strong",{parentName:"a"},"Concurrent Programming"))," \u2014 Write concurrent code that scales easily, without locks or deadlocks, with maximal laziness and resource safety."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_parallelism"},(0,a.kt)("strong",{parentName:"a"},"Parallelism"))," \u2014 Trivially partition work among many parallel fibers to make short work of CPU-intensive processing."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_queueing"},(0,a.kt)("strong",{parentName:"a"},"Queueing"))," \u2014 Build work processing flows and ration scarce resources with powerful asynchronous queues."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_retrying"},(0,a.kt)("strong",{parentName:"a"},"Retrying"))," \u2014 Create and test robust retry strategies that make your application resilient to transient failures."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_scheduling"},(0,a.kt)("strong",{parentName:"a"},"Scheduling"))," \u2014 Schedule repeating work, like report generation or email notifications, using flexible, composable schedules."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_streaming"},(0,a.kt)("strong",{parentName:"a"},"Streaming"))," \u2014 Handle huge or infinite amounts of data in constant heap space with efficient, lazy, concurrent streams."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/next/usecases/usecases_testing"},(0,a.kt)("strong",{parentName:"a"},"Testing"))," - Easily test effectual programs with powerful combinators, built-in property based testing, and seamless mocking capabilities.")),(0,a.kt)("p",null,"Explore the pages above and learn how the simple, powerful building blocks in ZIO help you solve problems in these critical areas."))}u.isMDXComponent=!0}}]);