"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[26203],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>m});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(i),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return i?n.createElement(f,a(a({ref:t},p),{},{components:i})):n.createElement(f,a({ref:t},p))}));function m(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=i[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},28529:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=i(87462),r=(i(67294),i(3905));const o={id:"zio-redis",title:"ZIO Redis"},a=void 0,l={unversionedId:"ecosystem/officials/zio-redis",id:"ecosystem/officials/zio-redis",title:"ZIO Redis",description:"ZIO Redis is a ZIO native Redis client.",source:"@site/docs/ecosystem/officials/zio-redis.md",sourceDirName:"ecosystem/officials",slug:"/ecosystem/officials/zio-redis",permalink:"/ecosystem/officials/zio-redis",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/officials/zio-redis.md",tags:[],version:"current",frontMatter:{id:"zio-redis",title:"ZIO Redis"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO Query",permalink:"/ecosystem/officials/zio-query"},next:{title:"ZIO RocksDB",permalink:"/ecosystem/officials/zio-rocksdb"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2},{value:"Resources",id:"resources",level:2}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-redis"},"ZIO Redis")," is a ZIO native Redis client."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"ZIO Redis is in the experimental phase of development, but its goals are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Type Safety")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Performance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Minimum Dependency")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ZIO Native"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Since the ZIO Redis is in the experimental phase, it is not released yet."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"To execute our ZIO Redis effect, we should provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"RedisExecutor")," layer to that effect. To create this layer we should also provide the following layers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Logging")," \u2014 For simplicity, we ignored the logging functionality."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"RedisConfig")," \u2014 Using default one, will connect to the ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost:6379")," Redis instance."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Codec")," \u2014 In this example, we are going to use the built-in ",(0,r.kt)("inlineCode",{parentName:"li"},"StringUtf8Codec")," codec.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.console.{Console, putStrLn}\nimport zio.duration._\nimport zio.logging.Logging\nimport zio.redis._\nimport zio.redis.codec.StringUtf8Codec\nimport zio.schema.codec.Codec\nimport zio.{ExitCode, URIO, ZIO, ZLayer}\n\nobject ZIORedisExample extends zio.App {\n\n  val myApp: ZIO[Console with RedisExecutor, RedisError, Unit] = for {\n    _ <- set("myKey", 8L, Some(1.minutes))\n    v <- get[String, Long]("myKey")\n    _ <- putStrLn(s"Value of myKey: $v").orDie\n    _ <- hSet("myHash", ("k1", 6), ("k2", 2))\n    _ <- rPush("myList", 1, 2, 3, 4)\n    _ <- sAdd("mySet", "a", "b", "a", "c")\n  } yield ()\n\n  val layer: ZLayer[Any, RedisError.IOError, RedisExecutor] =\n    Logging.ignore ++ ZLayer.succeed(RedisConfig.Default) ++ ZLayer.succeed(StringUtf8Codec) >>> RedisExecutor.live\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    myApp.provideCustom(layer).exitCode\n}\n')),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=yqFt3b3RBkI"},"ZIO Redis")," by Dejan Mijic \u2014 Redis is one of the most commonly used in-memory data structure stores. In this talk, Dejan will introduce ZIO Redis, a purely functional, strongly typed client library backed by ZIO, with excellent performance and extensive support for nearly all of Redis' features. He will explain the library design using the bottom-up approach - from communication protocol to public APIs. Finally, he will wrap the talk by demonstrating the client's usage and discussing its performance characteristics.")))}u.isMDXComponent=!0}}]);