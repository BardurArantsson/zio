"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[25754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,y=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?o.createElement(y,i(i({ref:t},u),{},{components:n})):o.createElement(y,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},29233:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={id:"dynamodb-key-value-store",title:"DynamoDB Key-value Store"},i="Example Project",l={unversionedId:"dynamodb-key-value-store",id:"dynamodb-key-value-store",title:"DynamoDB Key-value Store",description:"An example project or sample code will be provided in the future to demonstrate how to use this module in a zio-flow app. In the meantime, our integration test suite (DynamoDbKeyValueStoreSpec.scala under it subdirectory) provides some good examples.",source:"@site/node_modules/@zio.dev/zio-flow/DynamoDbKvStore.md",sourceDirName:".",slug:"/dynamodb-key-value-store",permalink:"/zio-flow/dynamodb-key-value-store",draft:!1,tags:[],version:"current",frontMatter:{id:"dynamodb-key-value-store",title:"DynamoDB Key-value Store"},sidebar:"sidebar",previous:{title:"Cassandra Key-value Store",permalink:"/zio-flow/cassandra-key-value-store"},next:{title:"Remote",permalink:"/zio-flow/remote"}},s={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"example-project"},"Example Project"),(0,r.kt)("p",null,"An example project or sample code will be provided in the future to demonstrate how to use this module in a ",(0,r.kt)("inlineCode",{parentName:"p"},"zio-flow")," app. In the meantime, our integration test suite (",(0,r.kt)("inlineCode",{parentName:"p"},"DynamoDbKeyValueStoreSpec.scala")," under ",(0,r.kt)("inlineCode",{parentName:"p"},"it")," subdirectory) provides some good examples."),(0,r.kt)("h1",{id:"database-setup"},"Database Setup"),(0,r.kt)("p",null,"The DynamoDB module requires a table for persistence. Here's a Python script to create the table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import boto3\n\ndynamodb = boto3.resource('dynamodb')\n\ndynamodb.create_table (\n    TableName = '_zflow_key_value_store',\n    AttributeDefinitions = [\n         {\n             'AttributeName': 'zflow_kv_key',\n             'AttributeType': 'B'\n         },\n         {\n             'AttributeName': 'zflow_kv_timestamp',\n             'AttributeType': 'N'\n         }\n    ],    \n    KeySchema = [\n        {\n            'AttributeName': 'zflow_kv_key',\n            'KeyType': 'HASH'\n        },\n        {\n            'AttributeName': 'zflow_kv_timestamp',\n            'KeyType': 'RANGE'\n        }\n    ],\n    GlobalSecondaryIndexes = [\n        {\n            'IndexName': 'namespace_index',\n            'KeySchema': [\n                {\n                    'AttributeName': 'zflow_kv_namespace',\n                    'KeyType': 'HASH'\n                }\n            ],\n            'Projection': {\n                'NonKeyAttributes': ['zflow_kv_value'],\n                'ProjectionType': 'INCLUDE'\n            },\n            'ProvisionedThroughput' = {\n                'ReadCapacityUnits': 1,\n                'WriteCapacityUnits': 1\n            }\n        }\n    ],\n    ProvisionedThroughput = {\n        'ReadCapacityUnits': 1,\n        'WriteCapacityUnits': 1\n    }\n)\n")),(0,r.kt)("p",null,"Of course, you can use your favourite AWS tool to create the table (e.g. DynamoDB Console) or to automate the creation (e.g. via CloudFormation). You should customize the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProvisionedThroughput")," settings when the table is provisioned."),(0,r.kt)("h1",{id:"performancescaling-considerations"},"Performance/Scaling Considerations:"),(0,r.kt)("p",null,"As you can see from the script above, the primary key is composed of the two columns, ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_timestamp"),". In particular, ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_key")," is the partition key and ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_timestamp")," is the sort key. Internally, zio-flow will store the namespace as part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_key")," value as well, but it will also\nstore it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace")," attribute for easy access to all values within a namespace. This requires\na secondary index to be set up on the ",(0,r.kt)("inlineCode",{parentName:"p"},"zflow_kv_namespace")," attribute."))}c.isMDXComponent=!0}}]);